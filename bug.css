The following CSS code snippet demonstrates an unusual issue related to specificity and inheritance:

```css
.parent {
  color: blue;
}

.child {
  color: red !important;
}

.parent .child {
  color: green;
}
```

In this scenario, we might expect the `.parent .child` rule to override the `.child` rule due to its higher specificity. However, the `!important` declaration in `.child` takes precedence, resulting in the text within elements matching `.parent .child` to be red instead of green. This unexpected behavior arises from the interplay between specificity and the `!important` flag, highlighting a less common but potentially confusing CSS quirk. 